AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Back-end service for the Momento Pizza App

Parameters:  
  MomentoApiToken:
    Type: String
    Description: API token for Momento Cache
    NoEcho: true
    Default: ''  

Globals:
  Function:
    Runtime: nodejs18.x 
    Architectures:
      - arm64
    Tracing: Active
    Timeout: 3
    MemorySize: 1024
    Handler: index.handler
    Layers:
      - !Sub arn:aws:lambda:${AWS::Region}:094274105915:layer:AWSLambdaPowertoolsTypeScript:12
    Environment:
      Variables:
        AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
        SECRET_ID: !Ref MomentoSecret
  Api:
    Cors:
      AllowMethods: "'POST,GET,PUT,OPTIONS'"
      AllowHeaders: "'Content-Type'"
      AllowOrigin: "'*'"

Resources:
  OrderApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: dev
      DefinitionBody:
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: ./order-openapi.yaml

  AdminApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: dev
      DefinitionBody:
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: ./admin-openapi.yaml

  OrderTable:
    Type: AWS::DynamoDB::Table
    Properties:
      BillingMode: PAY_PER_REQUEST      
      KeySchema:
        - AttributeName: pk
          KeyType: HASH
        - AttributeName: sk
          KeyType: RANGE
      AttributeDefinitions:
        - AttributeName: pk
          AttributeType: S
        - AttributeName: sk
          AttributeType: S
        - AttributeName: type
          AttributeType: S
        - AttributeName: creator
          AttributeType: S
      GlobalSecondaryIndexes:
        - IndexName: type
          KeySchema:
            - AttributeName: type
              KeyType: HASH
            - AttributeName: creator
              KeyType: RANGE
          Projection:
            ProjectionType: ALL

  MomentoSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      SecretString:
        Fn::Sub:
          - |-
            {            
              "momento": "${MomentoApiToken}"
            }
          - MomentoApiToken: !Ref MomentoApiToken

  # Order Api Functions
  AddOrderFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/add-order
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action: dynamodb:BatchWriteItem
              Resource: !GetAtt OrderTable.Arn
      Environment:
        Variables:
          TABLE_NAME: !Ref OrderTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref OrderApi
            Path: /orders
            Method: POST

  GetMyOrdersFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/get-my-orders
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action: dynamodb:Query
              Resource: !Sub ${OrderTable.Arn}/index/type
            - Effect: Allow
              Action:
                - secretsmanager:GetSecretValue
              Resource: !Ref MomentoSecret
      Environment:
        Variables:
          TABLE_NAME: !Ref OrderTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref OrderApi
            Path: /orders
            Method: GET

  GetOrderFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/get-order
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action: dynamodb:Query
              Resource: !GetAtt OrderTable.Arn
            - Effect: Allow
              Action:
                - secretsmanager:GetSecretValue
              Resource: !Ref MomentoSecret
      Environment:
        Variables:
          TABLE_NAME: !Ref OrderTable
          RESTRICT_TO_CREATOR: true
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref OrderApi
            Path: /orders/{orderId}
            Method: GET

  UpdateOrderFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/update-order
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action: 
                - dynamodb:UpdateItem
                - dynamodb:BatchWriteItem
              Resource: !GetAtt OrderTable.Arn
      Environment:
        Variables:
          TABLE_NAME: !Ref OrderTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref OrderApi
            Path: /orders/{orderId}
            Method: PUT

  SubmitOrderFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/submit-order
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action: 
                - dynamodb:UpdateItem
                - dynamodb:GetItem
              Resource: !GetAtt OrderTable.Arn
      Environment:
        Variables:
          TABLE_NAME: !Ref OrderTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref OrderApi
            Path: /orders/{orderId}/statuses
            Method: POST

  # Admin Api Functions
  GetAllOrdersFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/get-all-orders
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action: dynamodb:Query
              Resource: !Sub ${OrderTable.Arn}/index/type
            - Effect: Allow
              Action:
                - secretsmanager:GetSecretValue
              Resource: !Ref MomentoSecret
      Environment:
        Variables:
          TABLE_NAME: !Ref OrderTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref AdminApi
            Path: /orders
            Method: GET

  UpdateOrderStatusFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/update-order-status
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action: 
                - dynamodb:UpdateItem
                - dynamodb:GetItem
              Resource: !GetAtt OrderTable.Arn
      Environment:
        Variables:
          TABLE_NAME: !Ref OrderTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref AdminApi
            Path: /orders/{orderId}/statuses
            Method: POST
        
  AdminGetOrderFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/get-order
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action: dynamodb:Query
              Resource: !GetAtt OrderTable.Arn
            - Effect: Allow
              Action:
                - secretsmanager:GetSecretValue
              Resource: !Ref MomentoSecret
      Environment:
        Variables:
          TABLE_NAME: !Ref OrderTable
          RESTRICT_TO_CREATOR: false
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref AdminApi
            Path: /orders/{orderId}
            Method: GET

  # Load Generator
  DeleteOrderFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: load-generator/functions/delete-order
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action: 
                - dynamodb:Query
                - dynamodb:BatchWriteItem
              Resource: !GetAtt OrderTable.Arn
      Environment:
        Variables:
          TABLE_NAME: !Ref OrderTable
  
  GenerateOrdersFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: load-generator/functions/generate-orders
      Policies:
        - AWSLambdaBasicExecutionRole

  SendRequestFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: load-generator/functions/send-request
      Timeout: 30
      Policies:
        - AWSLambdaBasicExecutionRole

  GeneratorStateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      Type: EXPRESS
      DefinitionUri: load-generator/workflows/generator.asl.json
      DefinitionSubstitutions:
        LambdaInvoke: !Sub arn:${AWS::Partition}:states:::lambda:invoke
        GenerateOrders: !GetAtt GenerateOrdersFunction.Arn
        SendRequest: !GetAtt SendRequestFunction.Arn
        DeleteOrder: !GetAtt DeleteOrderFunction.Arn
        OrderApiBaseUrl: !Sub https://${OrderApi}.execute-api.${AWS::Region}.amazonaws.com/dev
        AdminApiBaseUrl: !Sub https://${AdminApi}.execute-api.${AWS::Region}.amazonaws.com/dev
      Policies:
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action: lambda:InvokeFunction
              Resource:
                - !GetAtt GenerateOrdersFunction.Arn
                - !GetAtt SendRequestFunction.Arn
                - !GetAtt DeleteOrderFunction.Arn
            - Effect: Allow
              Action:
                - logs:CreateLogDelivery
                - logs:GetLogDelivery
                - logs:UpdateLogDelivery
                - logs:DeleteLogDelivery
                - logs:ListLogDeliveries
                - logs:PutResourcePolicy
                - logs:DescribeResourcePolicies
                - logs:DescribeLogGroups
              Resource: "*"  
      Events:
        StartEvent:
          Type: EventBridgeRule
          Properties:
            Pattern:
              detail-type:
                - Load Generator
              source:
                - momento.pizza
      Logging:
        Level: ALL
        IncludeExecutionData: true
        Destinations:
          - CloudWatchLogsLogGroup:
              LogGroupArn: !GetAtt GeneratorLogGroup.Arn

  GeneratorLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 30

  # Monitoring Dashboard
  LatencyDashboard:
    Type: AWS::CloudWatch::Dashboard
    Properties:
      DashboardName: MomentoPizza
      DashboardBody: 
        Fn::Sub: 
          - |-
            {
                "widgets": [
                    {
                        "height": 6,
                        "width": 12,
                        "y": 0,
                        "x": 0,
                        "type": "metric",
                        "properties": {
                            "metrics": [
                                [ "Momento", "get-order-latency", "service", "pizza-tracker", { "region": "${region}" } ],
                                [ "Momento", "get-my-orders-latency", "service", "pizza-tracker", { "region": "${region}" } ],
                                [ "Momento", "get-all-orders-latency", "service", "pizza-tracker", { "region": "${region}" } ]
                            ],
                            "view": "timeSeries",
                            "stacked": false,
                            "region": "${region}",
                            "stat": "Average",
                            "period": 1,
                            "title": "Latency Metrics"
                        }
                    },
                    {
                        "type": "metric",
                        "x": 12,
                        "y": 0,
                        "width": 12,
                        "height": 3,
                        "properties": {
                            "sparkline": true,
                            "view": "singleValue",
                            "metrics": [
                                [ "Momento", "get-all-orders-latency", "service", "pizza-tracker" ],
                                [ ".", "get-my-orders-latency", ".", "." ],
                                [ ".", "get-order-latency", ".", "." ]
                            ],
                            "region": "${region}",
                            "title": "Avg Latency"
                        }
                    },
                    {
                        "type": "metric",
                        "x": 12,
                        "y": 3,
                        "width": 12,
                        "height": 3,
                        "properties": {
                            "metrics": [
                                [ "Momento", "get-all-orders-latency", "service", "pizza-tracker", { "region": "${region}" } ],
                                [ ".", "get-my-orders-latency", ".", ".", { "region": "${region}" } ],
                                [ ".", "get-order-latency", ".", ".", { "region": "${region}" } ]
                            ],
                            "sparkline": true,
                            "view": "singleValue",
                            "region": "${region}",
                            "title": "p99 Latency",
                            "period": 300,
                            "stat": "p99"
                        }
                    }
                ]
            }
          - region: !Ref AWS::Region

Outputs:
  OrderApiEndpoint:
    Description: Copy and paste this value in ./order-ui/next.config.js into the NEXT_PUBLIC_ORDER_API property
    Value: !Sub "https://${OrderApi}.execute-api.${AWS::Region}.amazonaws.com/dev"
  AdminApiEndpoint:
    Description: Copy and paste this value in ./admin-ui/next.config.js into the NEXT_PUBLIC_ADMIN_API property
    Value: !Sub "https://${AdminApi}.execute-api.${AWS::Region}.amazonaws.com/dev"